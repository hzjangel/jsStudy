(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{219:function(t,n,a){"use strict";a.r(n);var s=a(0),e=Object(s.a)({},function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型链","aria-hidden":"true"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),a("h2",{attrs:{id:"显示原型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显示原型","aria-hidden":"true"}},[t._v("#")]),t._v(" 显示原型")]),t._v(" "),a("p",[t._v("每一个函数"),a("code",[t._v("function")]),t._v("都会有一个"),a("code",[t._v("prototype")]),t._v(",即"),a("code",[t._v("显示原型属性")]),t._v(";默认指向一个空的"),a("code",[t._v("Object")]),t._v("对象(但是Object对象除外)")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[t._v("在默认情况下,函数的原型对象会自动获得"),a("code",[t._v("constructor")]),t._v("属性,这个属性指向原型对象,即")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fun1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fun1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Fun1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("h2",{attrs:{id:"隐式原型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隐式原型","aria-hidden":"true"}},[t._v("#")]),t._v(" 隐式原型")]),t._v(" "),a("p",[t._v("每一个实例对象都有一个"),a("code",[t._v("__proto__")]),t._v(",称之为"),a("code",[t._v("隐式原型属性")])]),t._v(" "),a("p",[t._v("对象隐式原型的值为其对应构造函数的显示原型的值")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[t._v("每一个函数不仅拥有显示原型属性,也拥有一个隐式原型属性"),a("code",[t._v("__proto__")]),t._v("(function是Function的实例),所以说所有函数的"),a("code",[t._v("__proto__")]),t._v("都是相等的")]),t._v(" "),a("p",[t._v("对于"),a("code",[t._v("Object")]),t._v("来说,"),a("code",[t._v("Object")]),t._v("也是"),a("code",[t._v("Function")]),t._v("的实例,所以Object对象也有隐式原型属性,"),a("code",[t._v("Object")]),t._v("的隐式原型属性指向"),a("code",[t._v("Function.prototype")])]),t._v(" "),a("p",[t._v("对于"),a("code",[t._v("Function")]),t._v("来说,"),a("code",[t._v("Function")]),t._v("是"),a("code",[t._v("Function")]),t._v("的实例对象,即自身的实例对象"),a("code",[t._v("Function = new Function")]),t._v(","),a("code",[t._v("Function")]),t._v("的显示原型和隐是原型是相等的")])])])},[],!1,null,null,null);n.default=e.exports}}]);